[{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"preperation-of-metadata-file","dir":"Articles","previous_headings":"","what":"preperation of metadata file","title":"epi2me2r vignette","text":"Prior starting, making sure metadata file formatted appropriately correct format ensure data imported correctly. can use one metadata file AMR WIMP samples separate. options shown .","code":""},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"combo-metadata-file","dir":"Articles","previous_headings":"preperation of metadata file","what":"Combo metadata file","title":"epi2me2r vignette","text":"file 4 required columns must entered seen : amr_filename : original amr file name without csv extension amr_barcodes : barcodes (note barcode samples enter none cells). AMR workflow, barcodes listed “barcode” two digit number, barcodes entered “none” wimp_filename : original amr file name without csv extension wimp_barcodes : barcodes (note barcode samples enter NA cells). AMR workflow, barcodes listed “BC” two digit number, barcodes entered “NA” additionally information four required columns, may include additional metadata import, treatment type, sample numbers, etc. example combo metadata file:","code":"epi2me.metadata <- read.csv(\"../data/example_metadata.csv\") head(epi2me.metadata) ##   arma_filename wimp_filename amra_barcode wimp_barcode Samplename  treatment ## 1   arma_288715   324212_1777    barcode02    barcode02    Animal1    control ## 2   arma_288715   324212_1777    barcode03    barcode03    Animal2 antibiotic ## 3   arma_288715   324212_1777    barcode04    barcode04    Animal3    control ## 4   arma_288716   324212_1778         none         <NA>    Animal4 antibiotic"},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"full-automated-data-import","dir":"Articles","previous_headings":"","what":"Full Automated data import","title":"epi2me2r vignette","text":"AMR WIMP data, raw csv’s downloaded epi2mw website need directory (without files). Note processing WIMP ARM data need two directories one set data.","code":""},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"amr_raw_to_phyloseq","dir":"Articles","previous_headings":"Full Automated data import > AMR data","what":"amr_raw_to_phyloseq","title":"epi2me2r vignette","text":"read AMR data requires directory metadata file. directory one csv files generated EPI2ME . example metadata file . data using example run EPI2ME pipeline. four options: path..amr.files required: path raw csv files (.e. “Desktop/raw_data/”) metadata required: metadata following format data.frame coveragenumber optional : total length gene must present included count table, default 80%; argument takes number 1 99. Default 80. keepSNP optional : gene considered resistance SNP mutation. Default FALSE (include genes) can changed TRUE include genes.","code":"ps.amr.object <- amr_raw_to_phyloseq(path.to.amr.files = \"../data/example_amr_data/\",                                      metadata = epi2me.metadata,                                      coveragenumber = 80,                                       keepSNP = FALSE) ## phyloseq-class experiment-level object ## otu_table()   OTU Table:         [ 67 taxa and 4 samples ] ## sample_data() Sample Data:       [ 4 samples by 7 sample variables ] ## tax_table()   Taxonomy Table:    [ 67 taxa by 4 taxonomic ranks ]"},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"amr_raw_to_metagenomeseq","dir":"Articles","previous_headings":"Full Automated data import > AMR data","what":"amr_raw_to_metagenomeseq","title":"epi2me2r vignette","text":"parameters importing metagenomseq used used amr_raw_to_phyloseq function:","code":"mgs.amr.object <- amr_raw_to_metagenomeseq(path.to.amr.files = \"../data/example_amr_data/\",                                      metadata = epi2me.metadata,                                      coveragenumber = 80,                                       keepSNP = FALSE) ## Loading required namespace: metagenomeSeq mgs.amr.object ## MRexperiment (storageMode: environment) ## assayData: 67 features, 4 samples  ##   element names: counts  ## protocolData: none ## phenoData ##   sampleNames: arma_288715_barcode02 arma_288715_barcode03 ##     arma_288715_barcode04 arma_288716_none ##   varLabels: arma_filename wimp_filename ... sampleID (7 total) ##   varMetadata: labelDescription ## featureData ##   featureNames: 36033 36036 ... 40739 (67 total) ##   fvarLabels: OTUname Drug.Class ... ARO.Name (5 total) ##   fvarMetadata: labelDescription ## experimentData: use 'experimentData(object)' ## Annotation:"},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"wimp_raw_to_phyloseq","dir":"Articles","previous_headings":"Full Automated data import > WIMP","what":"wimp_raw_to_phyloseq","title":"epi2me2r vignette","text":"WIMP files used idea AMR files use package taxonomizr help add taxonomic hierarchical information. read WIMP data requires directory metadata file. directory one csv files generated EPI2ME . example metadata file . data using example run EPI2ME pipeline. four options: path..wimp.files required: path raw csv files (.e. “Desktop/raw_data/”) metadata required: metadata following format data.frame keep.unclassifed optional : keep genes classify classify beyond superkingdom. Default FALSE (include reads) can changed TRUE include reads keep.human optional : Keep reads associated homo sapien (microbiome usually considered contaminant) Default FALSE (include human associated reads) can changed TRUE include reads.","code":"ps.wimp.object <- wimp_raw_to_phyloseq(path.to.wimp.files = \"../data/example_wimp_data/\",                                      metadata = epi2me.metadata,                                      keep.unclassifed = FALSE,                                       keep.human = FALSE)"},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"wimp_raw_to_metagenomeseq","dir":"Articles","previous_headings":"Full Automated data import > WIMP","what":"wimp_raw_to_metagenomeseq","title":"epi2me2r vignette","text":"Like functions AMR, parameters importing metagenomseq used used wimp_raw_to_phyloseq function:","code":"mgs.wimp.object <- wimp_raw_to_metagenomeseq(path.to.wimp.files = \"../data/example_wimp_data/\",                                      metadata = epi2me.metadata,                                      keep.unclassifed = FALSE,                                       keep.human = FALSE) mgs.wimp.object"},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"step-by-step-import","dir":"Articles","previous_headings":"","what":"Step-by-step import","title":"epi2me2r vignette","text":"cases might want phyloseq metagenomeseq object instead just count matrix taxonomic list. cases can use functions.","code":""},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"read_in_amr_file","dir":"Articles","previous_headings":"Step-by-step import > AMR data","what":"read_in_amr_file","title":"epi2me2r vignette","text":"takes directory AMR csv files creates count matrix can used stream analysis. inputs similar previous examples (require metadata): path..amr.files required: path raw csv files (.e. “Desktop/raw_data/”) coveragenumber optional : total length gene must present included count table, default 80%; argument takes number 1 99. Default 80. keepSNP optional : gene considered resistance SNP mutation. Default FALSE (include genes) can changed TRUE include genes.","code":"amr.count.table <- read_in_amr_files(path.to.amr.files = \"../data/example_amr_data/\",                                      coveragenumber = 80,                                       keepSNP = FALSE) head(amr.count.table) ##    CVTERMID arma_288715_barcode02 arma_288715_barcode03 arma_288715_barcode04 ## 1:    36033                     5                     1                     1 ## 2:    36036                     0                     0                     1 ## 3:    36213                     0                     1                     1 ## 4:    36355                     3                     2                     3 ## 5:    36376                     0                     0                     0 ## 6:    36448                     2                     0                     0 ##    arma_288716_none ## 1:                3 ## 2:                0 ## 3:                1 ## 4:                1 ## 5:                1 ## 6:                1"},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"generate_amr_taxonomy","dir":"Articles","previous_headings":"Step-by-step import > AMR data","what":"generate_amr_taxonomy","title":"epi2me2r vignette","text":"function assigns AMR taxonomic hierarchical information CARD using count table CV TERM ID’s first column (CVTERMID). one input needed: amr.count.table required: data frame generated amr.count.table CVTERMID first column AMR taxonomic assignment verbose optional : subset coumn names included output default: (CVTERMID,Drug Class, AMR Gene Family, Resistance Mechanism, ARO Name) verbose=TRUE 13 columns returned.","code":"amr.taxonomy <- generate_amr_taxonomy(amr.count.table = amr.count.table,                                          verbose = FALSE) head(amr.taxonomy) ##    CVTERMID ## 1:    36033 ## 2:    36036 ## 3:    36213 ## 4:    36355 ## 5:    36376 ## 6:    36448 ##                                                                                                                                                                                                                                                        Drug Class ## 1:                                                                                                                                                                                                                                     fluoroquinolone antibiotic ## 2:                                                                                                                                                                                                                                     fluoroquinolone antibiotic ## 3:                                                                                                                                                                                                                                     fluoroquinolone antibiotic ## 4:                                                                                                                        cephalosporin;fluoroquinolone antibiotic;glycylcycline;penam;phenicol antibiotic;rifamycin antibiotic;tetracycline antibiotic;triclosan ## 5: aminocoumarin antibiotic;aminoglycoside antibiotic;carbapenem;cephalosporin;cephamycin;fluoroquinolone antibiotic;glycylcycline;macrolide antibiotic;penam;penem;peptide antibiotic;phenicol antibiotic;rifamycin antibiotic;tetracycline antibiotic;triclosan ## 6:                                                                                                                                                                                                                                                            N/A ##                                                                                                                                                                  AMR Gene Family ## 1:                                                                                                                             ATP-binding cassette (ABC) antibiotic efflux pump ## 2:                                                                                                                    major facilitator superfamily (MFS) antibiotic efflux pump ## 3:                                                                                                                    major facilitator superfamily (MFS) antibiotic efflux pump ## 4:                                                                                                              resistance-nodulation-cell division (RND) antibiotic efflux pump ## 5: ATP-binding cassette (ABC) antibiotic efflux pump;major facilitator superfamily (MFS) antibiotic efflux pump;resistance-nodulation-cell division (RND) antibiotic efflux pump ## 6:                                                                                                                    major facilitator superfamily (MFS) antibiotic efflux pump ##    Resistance Mechanism ARO Name ## 1:    antibiotic efflux     patA ## 2:    antibiotic efflux     emrA ## 3:    antibiotic efflux     emrB ## 4:    antibiotic efflux     acrB ## 5:    antibiotic efflux     TolC ## 6:    antibiotic efflux     emrD"},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"read_in_wimp_file","dir":"Articles","previous_headings":"Step-by-step import > WIMP data","what":"read_in_wimp_file","title":"epi2me2r vignette","text":"takes directory WIMP csv files creates count matrix can used stream analysis. inputs similar previous examples (require metadata): path..wimp.files required: path raw csv files (.e. “Desktop/raw_data/”)","code":"wimp.count.table <- read_in_wimp_files(path.to.wimp.files = \"../data/example_wimp_data/\") ## Reading in raw files from ../data/example_wimp_data/ ## The percentage of classifed reads was 94.4 head(wimp.count.table) ##    taxID 324212_1777_barcode02 324212_1777_barcode03 324212_1777_barcode04 ## 1:     0                     9                     6                     6 ## 2:   286                     3                     0                     0 ## 3:   287                     8                     9                    11 ## 4:   543                     2                     1                     2 ## 5:   544                     0                     0                     1 ## 6:   561                     0                     0                     0 ##    324212_1778_NA ## 1:              7 ## 2:              1 ## 3:             16 ## 4:              0 ## 5:              0 ## 6:              1"},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"generate_wimp_taxonomy","dir":"Articles","previous_headings":"Step-by-step import > WIMP data","what":"generate_wimp_taxonomy","title":"epi2me2r vignette","text":"function assigns phylogenetic taxonomic hierarchical information help taxonomizr count table NCBI taxonomic ID’s (taxID first column required. wimp.count.table required: data frame generated wimp.count.table taxID first column phylogenetic taxonomic assignment","code":"wimp.taxonomy <- generate_wimp_taxonomy(wimp.count.table = wimp.count.table)"},{"path":"https://mweinroth.github.io/epi2me2r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maggie Weinroth. Author, maintainer.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Weinroth M (2022). epi2me2r: Takes epi2me output makes R usable files. R package version 0.1.0, https://mweinroth.github.io/epi2me2r/.","code":"@Manual{,   title = {epi2me2r: Takes epi2me output and makes it into R usable files},   author = {Maggie Weinroth},   year = {2022},   note = {R package version 0.1.0},   url = {https://mweinroth.github.io/epi2me2r/}, }"},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"epi2me2r","dir":"","previous_headings":"","what":"Takes epi2me output and makes it into R usable files","title":"Takes epi2me output and makes it into R usable files","text":"epi2me2r designed take CSV output Oxford Nanopore’s EPI2ME facilitate easy import documents R downstream analysis either phyloseq metgenomeSeq object count tables taxonomy packages. Currently, raw data WIMP Antimicrobial Resistance (AMR) can used inputs.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"contents","dir":"","previous_headings":"","what":"Contents","title":"Takes epi2me output and makes it into R usable files","text":"Overview Installation Inputs Usage Issues Contact Citation","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Takes epi2me output and makes it into R usable files","text":"three main types functions epi2me2r: input: directory epi2me generated AMR csv files metadata file csv output: phyloseq object count table, taxonomy, metadata input: directory epi2me generated AMR csv files metadata file csv output: metagenomeseq object count table, taxonomy, metadata input: directory epi2me generated WIMP csv files metadata file csv output: phyloseq object count table, taxonomy, metadata input: directory epi2me generated WIMP csv files metadata file csv output: metagenomeseq object count table, taxonomy, metadata input: directory epi2me generated AMR csv files output: count matrix samples x AMR genes input: directory epi2me generated WIMP csv files output: count matrix samples x taxinomic classifications input: count table read_in_amr_files generated format output: ontological list AMR genes input: count table read_in_wimp_files generated format output: list IDed organisms samples superkingdom species : additional function created fit main workflows amr_read_taxonomy. function reads AMR WIMP raw data adds taxonomic information AMR gene available. function uses paths raw AMR directory containing AMR csv WIMP directory raw WIMP csv. Output taxonomic classification AMR genes classifications available.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Takes epi2me output and makes it into R usable files","text":"epi2me2r can currently downloaded github:","code":"install.packages(\"devtools\")  library(devtools)  install_github(\"mweinroth/epi2me2r\")  library(epi2me2r)"},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"inputs","dir":"","previous_headings":"","what":"Inputs","title":"Takes epi2me output and makes it into R usable files","text":"use epi2me2r need raw data metadata file.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"raw-data","dir":"","previous_headings":"Inputs","what":"raw data","title":"Takes epi2me output and makes it into R usable files","text":"Raw data files downloaded EPI2ME report either WIMP AMR CARD tab (sample 2 different files conducted AMR WIMP analysis). Raw data downloaded csv file separate file run. barcodes samples, multiple samples contained one csv file; sample file. change names files downloaded file name type analysis run number (.e. arma_288715.csv [AMR] 226094_1777.csv [WIMP]). Place raw data files analysis type directory files use directory location import samples.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"metadata","dir":"","previous_headings":"Inputs","what":"metadata","title":"Takes epi2me output and makes it into R usable files","text":"second file need metadata file describing type samples , sample names. file may also contain important information samples treatments. four required columns running WIMP AMR analysis: file 4 required columns must entered seen : amr_filename : original amr file name without csv extension amr_barcodes : barcodes (note barcode samples enter none cells). AMR workflow, barcodes listed “barcode” two digit number, barcodes entered “none” wimp_filename : original amr file name without csv extension wimp_barcodes : barcodes (note barcode samples enter NA cells). AMR workflow, barcodes listed “BC” two digit number, barcodes entered “NA” additionally information four required columns, may include additional metadata import, treatment type, sample numbers, etc. example csv avalible ","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"usage","dir":"","previous_headings":"Inputs","what":"Usage","title":"Takes epi2me output and makes it into R usable files","text":"See vignette usage.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Takes epi2me output and makes it into R usable files","text":"metadata barcodes versions epi2me","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Takes epi2me output and makes it into R usable files","text":"questions comments can directed Maggie Weinroth: maggie.weinroth@usda.gov","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Takes epi2me output and makes it into R usable files","text":".","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/CARD_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"CARD 3.1.4 and 1.1.3 aro_index hand curated and combine — CARD_taxonomy","title":"CARD 3.1.4 and 1.1.3 aro_index hand curated and combine — CARD_taxonomy","text":"dataset information CARD genes 3.1.4 1.13 data releases variables follows:","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/CARD_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CARD 3.1.4 and 1.1.3 aro_index hand curated and combine — CARD_taxonomy","text":"","code":"data(CARD_taxonomy)"},{"path":"https://mweinroth.github.io/epi2me2r/reference/CARD_taxonomy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CARD 3.1.4 and 1.1.3 aro_index hand curated and combine — CARD_taxonomy","text":"data frame 3385 rows 13 variables","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/CARD_taxonomy.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CARD 3.1.4 and 1.1.3 aro_index hand curated and combine — CARD_taxonomy","text":"http://card.mcmaster.ca/download","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/CARD_taxonomy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CARD 3.1.4 and 1.1.3 aro_index hand curated and combine — CARD_taxonomy","text":"ARO Accession. ARO Accession (3000005--3005385) CARDversion. data came 3.1.4 1.1.3 (3.1.3, hand-added1.1.3) CVTERMID CV TERM ID (36014--43745) Model Sequence ID. Model Sequence ID Model ID. Model Name. ARO Name. Protein Accession. DNA Accession. AMR Gene Family. Drug Class. Resistance Mechanism. mutation-associated. gene mutation associated","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_metagenomeseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_metagenomeseq","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_metagenomeseq","text":"given directory metadata make phyloseq object metagenomeSeq package required.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_metagenomeseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_metagenomeseq","text":"path..amr.files path data raw csv files AMRA CARD analysis metdata data.table metadata \"filename\" \"barcode\"  columns required coveragenumber Minimum percentage gene must covered 0 99, default = 80 keepSNP true false keep AMR gene conferred one SNP change, default = FALSE","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_metagenomeseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_metagenomeseq","text":"metagenomeSeq object downstream analysis","code":""},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_metagenomeseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_metagenomeseq","text":"","code":"if (FALSE) { amr_raw_to_phyloseq(path.to.amr.files = path/to/amr.count.table, metadata = metadata, coveragenumber = 80, keepSNP = FALSE) }"},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_phyloseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_phyloseq","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_phyloseq","text":"given directory metadata make phyloseq object phyloseq package required.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_phyloseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_phyloseq","text":"path..amr.files path data raw csv files AMRA CARD analysis metdata data.table metadata \"filename\" \"barcode\"  columns required coveragenumber Minimum percentage gene must covered 0 99, default = 80 keepSNP true false keep AMR gene conferred one SNP change, default = FALSE","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_phyloseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_phyloseq","text":"phyloseq object downstream analysis","code":""},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_phyloseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_phyloseq","text":"","code":"if (FALSE) { amr_raw_to_phyloseq(path.to.amr.files = path/to/amr.count.table, metadata = metadata, coveragenumber = 80, keepSNP = FALSE) }"},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_read_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"assign taxonomy for phylogenetic and AMR for each read — amr_read_taxonomy","title":"assign taxonomy for phylogenetic and AMR for each read — amr_read_taxonomy","text":"given raw data AMR WIMP, provides full AMR toxon info reads assign ","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_read_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"assign taxonomy for phylogenetic and AMR for each read — amr_read_taxonomy","text":"path..wimp.files path data raw csv files WIMP analysis path..amr.files path data raw csv files AMRA analysis coveragenumber Minimum percentage gene must covered 0 99, default = 80","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_read_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"assign taxonomy for phylogenetic and AMR for each read — amr_read_taxonomy","text":"data frame double classified reads","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_read_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"assign taxonomy for phylogenetic and AMR for each read — amr_read_taxonomy","text":"","code":"if (FALSE) { amr_read_taxonomy(path.to.wimp.files = path/to/wimp.count.table, path.to.amr.files = path/to/amr.count.table, coveragenumber = 80) }"},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_amr_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a taxonomy file for AMR court table — generate_amr_taxonomy","title":"Generates a taxonomy file for AMR court table — generate_amr_taxonomy","text":"Generates taxonomy file AMR court table","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_amr_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a taxonomy file for AMR court table — generate_amr_taxonomy","text":"amr.count.table count AMR genes CVTERMID first row samples columns verbose true false keep columns AMR gene information ","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_amr_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a taxonomy file for AMR court table — generate_amr_taxonomy","text":"data table taxonomy AMR genes count table","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_amr_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a taxonomy file for AMR court table — generate_amr_taxonomy","text":"","code":"if (FALSE) { generate_amr_taxonomy(amr.count.table = amr.count.table, verbose = FALSE) }"},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_wimp_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a taxonomy file for WIMP court table using taxonomizr — generate_wimp_taxonomy","title":"Generates a taxonomy file for WIMP court table using taxonomizr — generate_wimp_taxonomy","text":"Generates taxonomy file WIMP court table using taxonomizr","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_wimp_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a taxonomy file for WIMP court table using taxonomizr — generate_wimp_taxonomy","text":"","code":"generate_wimp_taxonomy(wimp.count.table)"},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_wimp_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a taxonomy file for WIMP court table using taxonomizr — generate_wimp_taxonomy","text":"wimp.count.table count WIMP genes taxID first row samples columns","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_wimp_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a taxonomy file for WIMP court table using taxonomizr — generate_wimp_taxonomy","text":"data table taxonomy WIMP genes count table","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_wimp_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a taxonomy file for WIMP court table using taxonomizr — generate_wimp_taxonomy","text":"","code":"if (FALSE) { generate_wimp_taxonomy(wimp.count.table = wimp.count.table) }"},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_amr_files.html","id":null,"dir":"Reference","previous_headings":"","what":"take raw AMR csv files to matrix — read_in_amr_files","title":"take raw AMR csv files to matrix — read_in_amr_files","text":"take raw AMR csv files matrix","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_amr_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"take raw AMR csv files to matrix — read_in_amr_files","text":"path..amr.files file path AMR raw data csv coveragenumber Minimum percentage gene must covered 0 99 keepSNP true false keep AMR gene conferred one SNP change","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_amr_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"take raw AMR csv files to matrix — read_in_amr_files","text":"matrix AMR genes specific coverage without SNP associated","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_amr_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"take raw AMR csv files to matrix — read_in_amr_files","text":"","code":"if (FALSE) { read_in_amr_files(path.to.amr.files = \"~/Desktop/my.files/\", coveragenumber = 80, keepSNP = FALSE) }"},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_wimp_files.html","id":null,"dir":"Reference","previous_headings":"","what":"take raw mb csv files to matrix — read_in_wimp_files","title":"take raw mb csv files to matrix — read_in_wimp_files","text":"take raw mb csv files matrix","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_wimp_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"take raw mb csv files to matrix — read_in_wimp_files","text":"","code":"read_in_wimp_files(path.to.wimp.files)"},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_wimp_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"take raw mb csv files to matrix — read_in_wimp_files","text":"path.tofile file path","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_wimp_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"take raw mb csv files to matrix — read_in_wimp_files","text":"matrix mb genes specific coverage","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_wimp_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"take raw mb csv files to matrix — read_in_wimp_files","text":"","code":"if (FALSE) { read_in_mb_file(path.to.wimp.files=\"~/Desktop/my.files\") }"},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_metagenomeseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw WIMP files plus metadata to metagenomeseq object — wimp_raw_to_metagenomeseq","title":"Raw WIMP files plus metadata to metagenomeseq object — wimp_raw_to_metagenomeseq","text":"given wimp directory metadata make phyloseq object metagenomeSeq package required.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_metagenomeseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw WIMP files plus metadata to metagenomeseq object — wimp_raw_to_metagenomeseq","text":"","code":"wimp_raw_to_metagenomeseq(   path.to.wimp.files,   metadata,   keep.unclassifed = FALSE,   keep.human = FALSE )"},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_metagenomeseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raw WIMP files plus metadata to metagenomeseq object — wimp_raw_to_metagenomeseq","text":"path..wimp.files path data raw csv files WIMP analysis keep.human true false keep reads classified human default = FALSE metdata dataframe metadata \"filename\" \"barcode\"  columns required keep.unclassified true false keep reads classify phylum, default = FALSE","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_metagenomeseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raw WIMP files plus metadata to metagenomeseq object — wimp_raw_to_metagenomeseq","text":"metagenomeseq object downstream analysis WIMP data","code":""},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_metagenomeseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raw WIMP files plus metadata to metagenomeseq object — wimp_raw_to_metagenomeseq","text":"","code":"if (FALSE) { wimp_raw_to_metagenomeseq(path.to.wimp.files= path/to/wimpfiles, metadata = metadata, keep.unclassifed=FALSE, keep.human=FALSE) }"},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_phyloseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw WIMP files plus metadata to phyloseq object — wimp_raw_to_phyloseq","title":"Raw WIMP files plus metadata to phyloseq object — wimp_raw_to_phyloseq","text":"given wimp directory metadata make phyloseq object phyloseq package required.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_phyloseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw WIMP files plus metadata to phyloseq object — wimp_raw_to_phyloseq","text":"","code":"wimp_raw_to_phyloseq(   path.to.wimp.files,   metadata,   keep.unclassifed = FALSE,   keep.human = FALSE )"},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_phyloseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raw WIMP files plus metadata to phyloseq object — wimp_raw_to_phyloseq","text":"path..wimp.files path data raw csv files WIMP analysis keep.human true false keep reads classifed human default = FALSE metdata dataframe metadata \"filename\" \"barcode\"  columns required keep.unclassified true false keep reads classify phylum, default = FALSE","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_phyloseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raw WIMP files plus metadata to phyloseq object — wimp_raw_to_phyloseq","text":"phyloseq object downstream analysis WIMP data","code":""},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_phyloseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raw WIMP files plus metadata to phyloseq object — wimp_raw_to_phyloseq","text":"","code":"if (FALSE) { wimp_raw_to_phyloseq(path.to.wimp.files= path/to/wimpfiles, metadata = metadata, keep.unclassifed=FALSE, keep.human=FALSE) }"}]
