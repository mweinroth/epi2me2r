[{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"preparation-of-metadata-file","dir":"Articles","previous_headings":"","what":"Preparation of metadata file","title":"epi2me2r vignette","text":"Prior starting, making sure metadata file formatted appropriately ensure data imported correctly. can use one combined metadata file AMR WIMP samples separate file . options described .","code":""},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"combo-metadata-file","dir":"Articles","previous_headings":"Preparation of metadata file","what":"Combo metadata file","title":"epi2me2r vignette","text":"file 4 required columns must named follows: arma_filename : original amr file name without .csv extension arma_barcode : barcodes sample (note: barcode samples, enter none cells). AMR workflow, missing barcodes coded none wimp_filename : original amr file name without .csv extension wimp_barcode : barcodes sample (note: barcode samples, enter NA cells). WIMP workflow, missing barcodes coded NA additional information four required columns, may include additional metadata important, treatment type, sample numbers, etc. example combo metadata file included package.","code":"epi2me.metadata <- read.csv(system.file(\"extdata\", \"example_metadata.csv\", package = \"epi2me2r\")) head(epi2me.metadata) ##   arma_filename wimp_filename arma_barcode wimp_barcode Samplename  treatment ## 1   arma_288715   324212_1777    barcode02    barcode02    Animal1    control ## 2   arma_288715   324212_1777    barcode03    barcode03    Animal2 antibiotic ## 3   arma_288715   324212_1777    barcode04    barcode04    Animal3    control ## 4   arma_288716   324212_1778         none         <NA>    Animal4 antibiotic"},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"individual-metadata-file","dir":"Articles","previous_headings":"Preparation of metadata file","what":"Individual metadata file","title":"epi2me2r vignette","text":"just importing WIMP CARD ARMA files, need metadata associated workflow. just processing ARMA CARD data, required columns : * arma_filename * arma_barcode * metadata treatment sample names hand, just processing WIMP data required columns : * wimp_filename * wimp_barcode * metadata treatment sample names Even just processing one type data, ARMA WIMP information can included metadata (seen section combo metadata ).","code":""},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"fully-automated-data-import","dir":"Articles","previous_headings":"","what":"Fully automated data import","title":"epi2me2r vignette","text":"AMR WIMP data, raw CSVs downloaded epi2me website need directory (without files). Note processing WIMP ARMA data need two directories, one set data.","code":""},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"amr_raw_to_phyloseq","dir":"Articles","previous_headings":"Fully automated data import > AMR data","what":"amr_raw_to_phyloseq","title":"epi2me2r vignette","text":"Reading AMR data requires directory metadata file. directory CSV files generated EPI2ME . example metadata file . data using example run EPI2ME pipeline. four options: path..amr.files required: path raw CSV files (example \"Desktop/raw_data/\") metadata required: metadata formatted described data.frame coveragenumber optional : total length gene must present included count table. default 80%; argument takes number 1 99. Default 80. keepSNP optional : whether include genes considered resistance genes SNP mutation. Default FALSE (include genes) can changed TRUE include genes. following code example, use amr_raw_to_phyloseq() function included example metadata file read , well directory containing example AMR files also included epi2me2r package. code creates phyloSeq object example AMR files metadata.","code":"example.amr.dir <- system.file(\"extdata\", \"example_amr_data\", package = \"epi2me2r\")  ps.amr.object <- amr_raw_to_phyloseq(path.to.amr.files = example.amr.dir,                                      metadata = epi2me.metadata,                                      coveragenumber = 80,                                       keepSNP = FALSE) ## Reading in raw AMR files from /home/runner/work/_temp/Library/epi2me2r/extdata/example_amr_data"},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"amr_raw_to_metagenomeseq","dir":"Articles","previous_headings":"Fully automated data import > AMR data","what":"amr_raw_to_metagenomeseq","title":"epi2me2r vignette","text":"amr_raw_to_metagenomeseq() function uses arguments importing metagenomeSeq:","code":"mgs.amr.object <- amr_raw_to_metagenomeseq(path.to.amr.files = example.amr.dir,                                            metadata = epi2me.metadata,                                            coveragenumber = 80,                                             keepSNP = FALSE) ## Reading in raw AMR files from /home/runner/work/_temp/Library/epi2me2r/extdata/example_amr_data mgs.amr.object ## MRexperiment (storageMode: environment) ## assayData: 67 features, 4 samples  ##   element names: counts  ## protocolData: none ## phenoData ##   sampleNames: arma_288715_barcode02 arma_288715_barcode03 ##     arma_288715_barcode04 arma_288716_none ##   varLabels: arma_filename wimp_filename ... sampleID (7 total) ##   varMetadata: labelDescription ## featureData ##   featureNames: sp1 sp2 ... sp67 (67 total) ##   fvarLabels: OTUname CVTERMID ... ARO.Name (6 total) ##   fvarMetadata: labelDescription ## experimentData: use 'experimentData(object)' ## Annotation:"},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"wimp_raw_to_phyloseq","dir":"Articles","previous_headings":"Fully automated data import > WIMP","what":"wimp_raw_to_phyloseq","title":"epi2me2r vignette","text":"WIMP files similar AMR files use package taxonomizr add taxonomic hierarchical information. Reading WIMP data requires directory metadata file. directory CSV files generated EPI2ME . example metadata file . data using example run EPI2ME pipeline. four options: path..wimp.files required: path raw CSV files (example \"Desktop/raw_data/\") metadata required: metadata formatted described data.frame keep.unclassified optional : whether keep genes classify classify beyond superkingdom. Default FALSE (include reads) can changed TRUE include reads keep.human optional : whether keep reads associated Homo sapiens (usually considered contaminant microbiome data). Default FALSE (include human-associated reads) can changed TRUE include reads. following code uses wimp_raw_to_phyloseq() function example metadata read well directory example WIMP files included package convert raw WIMP files phyloSeq object:","code":"example.wimp.dir <- system.file(\"extdata\", \"example_wimp_data\", package = \"epi2me2r\")  ps.wimp.object <- wimp_raw_to_phyloseq(path.to.wimp.files = example.wimp.dir,                                        metadata = epi2me.metadata,                                        keep.unclassified = FALSE,                                         keep.human = FALSE)"},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"wimp_raw_to_metagenomeseq","dir":"Articles","previous_headings":"Fully automated data import > WIMP","what":"wimp_raw_to_metagenomeseq","title":"epi2me2r vignette","text":"Like functions AMR, wimp_raw_to_metagenomeSeq() function uses arguments importing metagenomeSeq used used wimp_raw_to_phyloseq() function:","code":"mgs.wimp.object <- wimp_raw_to_metagenomeseq(path.to.wimp.files = example.wimp.dir,                                              metadata = epi2me.metadata,                                              keep.unclassified = FALSE,                                               keep.human = FALSE)"},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"step-by-step-import","dir":"Articles","previous_headings":"","what":"Step-by-step import","title":"epi2me2r vignette","text":"cases might want phyloseq metagenomeSeq object, instead just count matrix taxonomic list. cases can use functions.","code":""},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"read_in_amr_file","dir":"Articles","previous_headings":"Step-by-step import > AMR data","what":"read_in_amr_file","title":"epi2me2r vignette","text":"takes directory AMR CSV files creates count matrix can used downstream analysis. inputs similar previous examples (metadata required): path..amr.files required: path raw CSV files (example \"Desktop/raw_data/\") coveragenumber optional : total length gene must present included count table. default 80%; argument takes number 1 99. Default 80. keepSNP optional : whether include genes considered resistance genes SNP mutation. Default FALSE (include genes) can changed TRUE include genes.","code":"amr.count.table <- read_in_amr_files(path.to.amr.files = example.amr.dir,                                      coveragenumber = 80,                                       keepSNP = FALSE) ## Reading in raw AMR files from /home/runner/work/_temp/Library/epi2me2r/extdata/example_amr_data head(amr.count.table) ##    CVTERMID arma_288715_barcode02 arma_288715_barcode03 arma_288715_barcode04 ## 1:    36033                     5                     1                     1 ## 2:    36036                     0                     0                     1 ## 3:    36213                     0                     1                     1 ## 4:    36355                     3                     2                     3 ## 5:    36376                     0                     0                     0 ## 6:    36448                     2                     0                     0 ##    arma_288716_none ## 1:                3 ## 2:                0 ## 3:                1 ## 4:                1 ## 5:                1 ## 6:                1"},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"generate_amr_taxonomy","dir":"Articles","previous_headings":"Step-by-step import > AMR data","what":"generate_amr_taxonomy","title":"epi2me2r vignette","text":"function assigns AMR taxonomic hierarchical information CARD using count table CV TERM ID’s first column (\"CVTERMID\"). one input needed: amr.count.table required: data frame generated amr.count.table CVTERMID first column AMR taxonomic assignment verbose optional : subset column names included output default: (CVTERMID,Drug Class, AMR Gene Family, Resistance Mechanism, ARO Name). verbose==TRUE 13 columns returned.","code":"amr.taxonomy <- generate_amr_taxonomy(amr.count.table = amr.count.table,                                          verbose = FALSE) head(amr.taxonomy) ##    CVTERMID ## 1:    36033 ## 2:    36036 ## 3:    36213 ## 4:    36355 ## 5:    36376 ## 6:    36448 ##                                                                                                                                                                                                                                                        Drug Class ## 1:                                                                                                                                                                                                                                     fluoroquinolone antibiotic ## 2:                                                                                                                                                                                                                                     fluoroquinolone antibiotic ## 3:                                                                                                                                                                                                                                     fluoroquinolone antibiotic ## 4:                                                                                                                        cephalosporin;fluoroquinolone antibiotic;glycylcycline;penam;phenicol antibiotic;rifamycin antibiotic;tetracycline antibiotic;triclosan ## 5: aminocoumarin antibiotic;aminoglycoside antibiotic;carbapenem;cephalosporin;cephamycin;fluoroquinolone antibiotic;glycylcycline;macrolide antibiotic;penam;penem;peptide antibiotic;phenicol antibiotic;rifamycin antibiotic;tetracycline antibiotic;triclosan ## 6:                                                                                                                                                                                                                                                            N/A ##                                                                                                                                                                  AMR Gene Family ## 1:                                                                                                                             ATP-binding cassette (ABC) antibiotic efflux pump ## 2:                                                                                                                    major facilitator superfamily (MFS) antibiotic efflux pump ## 3:                                                                                                                    major facilitator superfamily (MFS) antibiotic efflux pump ## 4:                                                                                                              resistance-nodulation-cell division (RND) antibiotic efflux pump ## 5: ATP-binding cassette (ABC) antibiotic efflux pump;major facilitator superfamily (MFS) antibiotic efflux pump;resistance-nodulation-cell division (RND) antibiotic efflux pump ## 6:                                                                                                                    major facilitator superfamily (MFS) antibiotic efflux pump ##    Resistance Mechanism ARO Name ## 1:    antibiotic efflux     patA ## 2:    antibiotic efflux     emrA ## 3:    antibiotic efflux     emrB ## 4:    antibiotic efflux     acrB ## 5:    antibiotic efflux     TolC ## 6:    antibiotic efflux     emrD"},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"read_in_wimp_file","dir":"Articles","previous_headings":"Step-by-step import > WIMP data","what":"read_in_wimp_file","title":"epi2me2r vignette","text":"takes directory WIMP CSV files creates count matrix can used downstream analysis. inputs similar previous examples (metadata required): path..wimp.files required: path raw CSV files (example \"Desktop/raw_data/\")","code":"example.wimp.dir <- system.file(\"extdata\", \"example_wimp_data\", package = \"epi2me2r\")  wimp.count.table <- read_in_wimp_files(path.to.wimp.files = example.wimp.dir) ## Reading in raw WIMP files from /home/runner/work/_temp/Library/epi2me2r/extdata/example_wimp_data ## The percentage of classified reads was 94.4 head(wimp.count.table) ##    taxID 324212_1777_barcode02 324212_1777_barcode03 324212_1777_barcode04 ## 1:     0                     9                     6                     6 ## 2:   286                     3                     0                     0 ## 3:   287                     8                     9                    11 ## 4:   543                     2                     1                     2 ## 5:   544                     0                     0                     1 ## 6:   561                     0                     0                     0 ##    324212_1778_NA ## 1:              7 ## 2:              1 ## 3:             16 ## 4:              0 ## 5:              0 ## 6:              1"},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"generate_wimp_taxonomy","dir":"Articles","previous_headings":"Step-by-step import > WIMP data","what":"generate_wimp_taxonomy","title":"epi2me2r vignette","text":"function assigns phylogenetic taxonomic hierarchical information help taxonomizr. count table NCBI taxonomic ID’s (\"taxID\") first column required. wimp.count.table required: data frame generated wimp.count.table \"taxID\" first column phylogenetic taxonomic assignment","code":"wimp.taxonomy <- generate_wimp_taxonomy(wimp.count.table = wimp.count.table)"},{"path":"https://mweinroth.github.io/epi2me2r/articles/epi2me2r-vignette.html","id":"other-functions","dir":"Articles","previous_headings":"","what":"Other functions","title":"epi2me2r vignette","text":"Another useful function amr_read_taxonomy, matches classified AMR read phylogenetic taxonomy (assigned) using read_id(). function takes following arguments: path..amr.files required: path raw AMR CSV files (example \"Desktop/raw_amr_data/\") path..wimp.files required: path raw WIMP CSV files (example \"Desktop/raw_wimp_data/\") coveragenumber optional : total length gene must present included count table. default 80%; argument takes number 1 99. Default 80.","code":"amr.read.classification <- amr_read_taxonomy(path.to.amr.files = example.amr.dir,                                              path.to.wimp.files = example.wimp.dir)"},{"path":"https://mweinroth.github.io/epi2me2r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maggie Weinroth. Author. Quentin D. Read. Author, maintainer.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"none","code":"@Misc{,   title = {epi2me2r},   author = {{Weinroth} and Margaret D.},   howpublished = {https://github.com/mweinroth/epi2me2r},   year = {2022},   note = {none}, }"},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"epi2me2r","dir":"","previous_headings":"","what":"Process Nanopore EPI2ME Output for Use in R","title":"Process Nanopore EPI2ME Output for Use in R","text":"epi2me2r designed take CSV output Oxford Nanopore’s EPI2ME facilitate easy import documents R downstream analysis. raw data imported either phyloseq metagenomeSeq object, count tables taxonomy packages. Currently, raw data WIMP Antimicrobial Resistance (AMR) can used inputs.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"contents","dir":"","previous_headings":"","what":"Contents","title":"Process Nanopore EPI2ME Output for Use in R","text":"Overview Installation Inputs Usage Issues Contact","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Process Nanopore EPI2ME Output for Use in R","text":"three main types functions epi2me2r: input: directory epi2me generated AMR CSV files metadata file CSV output: phyloseq object count table, taxonomy, metadata input: directory epi2me generated AMR CSV files metadata file CSV output: metagenomeSeq object count table, taxonomy, metadata input: directory epi2me generated WIMP CSV files metadata file CSV output: phyloseq object count table, taxonomy, metadata input: directory epi2me generated WIMP CSV files metadata file CSV output: metagenomeSeq object count table, taxonomy, metadata input: directory epi2me generated AMR CSV files output: count matrix samples x AMR genes input: directory epi2me generated WIMP CSV files output: count matrix samples x taxonomic classifications input: count table read_in_amr_files generated format output: ontological list AMR genes input: count table read_in_wimp_files generated format output: list IDed organisms samples superkingdom species : additional function created fit main workflows amr_read_taxonomy(). function reads AMR WIMP raw data adds taxonomic information AMR gene available. function uses paths raw AMR directory containing AMR CSVs WIMP directory raw WIMP CSVs. output taxonomic classification AMR genes classifications available.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Process Nanopore EPI2ME Output for Use in R","text":"development version epi2me2r can currently downloaded installed GitHub: install epi2me2r CRAN dependencies data.table taxonomizr. However install dependencies Biobase, phyloseq, metagenomeSeq, available Bioconductor. install dependencies, run following code. following code first installs BiocManager package. calls BiocManager::install() without arguments install latest version Bioconductor. calls BiocManager::install() install Bioconductor dependencies epi2me2r. See Bioconductor’s installation instructions details. run epi2me2r, call","code":"if (!require(remotes, quietly = TRUE)) install.packages('remotes') remotes::install_github(\"mweinroth/epi2me2r\") if (!require(\"BiocManager\", quietly = TRUE)) install.packages(\"BiocManager\") BiocManager::install() BiocManager::install(c(\"Biobase\", \"phyloseq\", \"metagenomeSeq\")) library(epi2me2r)"},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"inputs","dir":"","previous_headings":"","what":"Inputs","title":"Process Nanopore EPI2ME Output for Use in R","text":"use epi2me2r need raw data metadata file.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"raw-data","dir":"","previous_headings":"Inputs","what":"raw data","title":"Process Nanopore EPI2ME Output for Use in R","text":"Raw data files downloaded EPI2ME report either WIMP AMR CARD tab (sample 2 different files conducted AMR WIMP analysis). Raw data downloaded CSV file separate file run. barcodes samples, multiple samples contained one CSV file; , sample file. change names files downloaded, file name type analysis run number (e.g., arma_288715.csv [AMR] 226094_1777.csv [WIMP]). Place raw data files analysis type directory files ! use directory location import samples.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"metadata","dir":"","previous_headings":"Inputs","what":"metadata","title":"Process Nanopore EPI2ME Output for Use in R","text":"second file need metadata file describing type samples , sample names. file may also contain important information samples treatments. four required columns running WIMP AMR analysis: file 4 required columns must named follows: arma_filename : original amr file name without .csv extension arma_barcode : barcodes sample (note: barcode samples, enter none cells). AMR workflow, missing barcodes coded none wimp_filename : original amr file name without .csv extension wimp_barcode : barcodes sample (note: barcode samples, enter NA cells). WIMP workflow, missing barcodes coded NA additional information four required columns, may include additional metadata important, treatment type, sample numbers, etc. quick note barcodes: talked Issues section , earlier versions EPI2ME workflow list ARMA barcodes \"barcode\" two digit number WIMP barcodes listed \"BC\" two digit number. longer case (written barcode followed number), using older output, see section changing barcodes compatible style. example CSV available . First rows example CSV","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"usage","dir":"","previous_headings":"Inputs","what":"Usage","title":"Process Nanopore EPI2ME Output for Use in R","text":"See vignette usage.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Process Nanopore EPI2ME Output for Use in R","text":"current ARMA WIMP barcodes mostly compatible barcode nomenclature (difference ARMA files without barcodes entered none WIMP NA). However, early EPI2ME versions, ARMA barcodes listed \"barcode\" two digit number WIMP barcodes listed \"BC\" two digit number. longer case (formatted \"barcode\" followed number), using older output, need replace \"BC\" WIMP files \"barcode\". can opening file Ctrl+H search replace \"BC\" \"barcode\" Excel another text editor R. following example code reads CSV file replaces instances string \"BC\" \"barcode\" barcode column, overwrites original file.","code":"fake.data <- read.csv(\"226094_1777.csv\")  fake.data$barcode <- sub(\"BC*\", \"barcode\", fake.data$barcode)  write.csv(fake.data, \"226094_1777.csv\")"},{"path":"https://mweinroth.github.io/epi2me2r/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Process Nanopore EPI2ME Output for Use in R","text":"question comment, please open GitHub issue epi2me2r repository.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/CARD_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"CARD 3.1.4 and 1.1.3 aro_index hand curated and combine — CARD_taxonomy","title":"CARD 3.1.4 and 1.1.3 aro_index hand curated and combine — CARD_taxonomy","text":"dataset information CARD genes 3.1.4 1.13 data releases variables follows:","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/CARD_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CARD 3.1.4 and 1.1.3 aro_index hand curated and combine — CARD_taxonomy","text":"","code":"data(CARD_taxonomy)"},{"path":"https://mweinroth.github.io/epi2me2r/reference/CARD_taxonomy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CARD 3.1.4 and 1.1.3 aro_index hand curated and combine — CARD_taxonomy","text":"data frame 3385 rows 13 variables","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/CARD_taxonomy.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CARD 3.1.4 and 1.1.3 aro_index hand curated and combine — CARD_taxonomy","text":"https://card.mcmaster.ca/download","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/CARD_taxonomy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CARD 3.1.4 and 1.1.3 aro_index hand curated and combine — CARD_taxonomy","text":"ARO Accession. ARO Accession (3000005--3005385) CARDversion. data came 3.1.4 1.1.3   (3.1.3, hand-added 1.1.3) CVTERMID. CV TERM ID (36014--43745) Model Sequence ID. Model ID. Model Name. ARO Name. Protein Accession. DNA Accession. AMR Gene Family. Drug Class. Resistance Mechanism. mutation-associated. gene mutation associated","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_metagenomeseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_metagenomeseq","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_metagenomeseq","text":"Given directory metadata, make phyloseq object. metagenomeSeq package required.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_metagenomeseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_metagenomeseq","text":"path..amr.files path folder containing raw CSV files ARMA CARD analysis metadata data.table metadata \"filename\" \"barcode\" columns required coveragenumber Minimum percentage gene must covered. Range 0 99, default = 80 keepSNP TRUE FALSE: whether keep AMR gene conferred one SNP change, default = FALSE","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_metagenomeseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_metagenomeseq","text":"metagenomeSeq object downstream analysis","code":""},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_metagenomeseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_metagenomeseq","text":"","code":"if (FALSE) { amr_raw_to_phyloseq(path.to.amr.files = path/to/amr.count.table, metadata = metadata, coveragenumber = 80, keepSNP = FALSE) }"},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_phyloseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_phyloseq","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_phyloseq","text":"given directory metadata make phyloseq object phyloseq package required.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_phyloseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_phyloseq","text":"path..amr.files path data raw csv files ARMA CARD analysis metdata data.table metadata \"arma_filename\" \"arma_barcode\" columns required coveragenumber Minimum percentage gene must covered. Range 0 99, default = 80 keepSNP TRUE FALSE: whether keep AMR gene conferred one SNP change, default = FALSE","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_phyloseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_phyloseq","text":"phyloseq object downstream analysis","code":""},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_raw_to_phyloseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raw AMR files plus metadata to phyloseq object — amr_raw_to_phyloseq","text":"","code":"if (FALSE) { amr_raw_to_phyloseq(path.to.amr.files = path/to/amr.count.table, metadata = metadata, coveragenumber = 80, keepSNP = FALSE) }"},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_read_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"assign taxonomy for phylogenetic and AMR for each read — amr_read_taxonomy","title":"assign taxonomy for phylogenetic and AMR for each read — amr_read_taxonomy","text":"Given raw data AMR WIMP, provides full AMR taxon info reads assign ","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_read_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"assign taxonomy for phylogenetic and AMR for each read — amr_read_taxonomy","text":"path..wimp.files path folder containing raw CSV files WIMP analysis path..amr.files path folder containing raw CSV files ARMA analysis coveragenumber Minimum percentage gene must covered. Range 0 99, default = 80","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_read_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"assign taxonomy for phylogenetic and AMR for each read — amr_read_taxonomy","text":"data.frame double classified reads","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/amr_read_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"assign taxonomy for phylogenetic and AMR for each read — amr_read_taxonomy","text":"","code":"if (FALSE) { amr_read_taxonomy(path.to.wimp.files = \"path/to/wimp_files\", path.to.amr.files = \"path/to/amr_files\", coveragenumber = 80) }"},{"path":"https://mweinroth.github.io/epi2me2r/reference/epi2me2r.html","id":null,"dir":"Reference","previous_headings":"","what":"epi2me2r. — epi2me2r","title":"epi2me2r. — epi2me2r","text":"data CARD db","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_amr_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a taxonomy file for AMR count table — generate_amr_taxonomy","title":"Generates a taxonomy file for AMR count table — generate_amr_taxonomy","text":"Generates taxonomy file AMR count table","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_amr_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a taxonomy file for AMR count table — generate_amr_taxonomy","text":"amr.count.table count AMR genes CVTERMID first row samples columns verbose TRUE FALSE: whether keep columns AMR gene information . Default FALSE.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_amr_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a taxonomy file for AMR count table — generate_amr_taxonomy","text":"data table taxonomy AMR genes count table","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_amr_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a taxonomy file for AMR count table — generate_amr_taxonomy","text":"","code":"if (FALSE) { generate_amr_taxonomy(amr.count.table = amr.count.table, verbose = FALSE) }"},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_wimp_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a taxonomy file for WIMP court table using taxonomizr — generate_wimp_taxonomy","title":"Generates a taxonomy file for WIMP court table using taxonomizr — generate_wimp_taxonomy","text":"Generates taxonomy file WIMP court table using taxonomizr","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_wimp_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a taxonomy file for WIMP court table using taxonomizr — generate_wimp_taxonomy","text":"","code":"generate_wimp_taxonomy(wimp.count.table)"},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_wimp_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a taxonomy file for WIMP court table using taxonomizr — generate_wimp_taxonomy","text":"wimp.count.table count WIMP genes taxID first row samples columns","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_wimp_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a taxonomy file for WIMP court table using taxonomizr — generate_wimp_taxonomy","text":"data table taxonomy WIMP genes count table","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/generate_wimp_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a taxonomy file for WIMP court table using taxonomizr — generate_wimp_taxonomy","text":"","code":"if (FALSE) { generate_wimp_taxonomy(wimp.count.table = wimp.count.table) }"},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_amr_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert raw AMR CSV files to data table — read_in_amr_files","title":"Convert raw AMR CSV files to data table — read_in_amr_files","text":"Convert raw AMR CSV files data table","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_amr_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert raw AMR CSV files to data table — read_in_amr_files","text":"path..amr.files path folder containing raw CSV files ARMA CARD analysis coveragenumber Minimum percentage gene must covered. Range 0 99, default = 80 keepSNP TRUE FALSE: whether keep AMR gene conferred one SNP change, default = FALSE","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_amr_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert raw AMR CSV files to data table — read_in_amr_files","text":"data.table AMR genes specific coverage without SNP associated","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_amr_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert raw AMR CSV files to data table — read_in_amr_files","text":"","code":"if (FALSE) { read_in_amr_files(path.to.amr.files = \"~/Desktop/my.files/\", coveragenumber = 80, keepSNP = FALSE) }"},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_wimp_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert raw WIMP CSV files to data table — read_in_wimp_files","title":"Convert raw WIMP CSV files to data table — read_in_wimp_files","text":"Convert raw WIMP CSV files data table","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_wimp_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert raw WIMP CSV files to data table — read_in_wimp_files","text":"","code":"read_in_wimp_files(path.to.wimp.files)"},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_wimp_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert raw WIMP CSV files to data table — read_in_wimp_files","text":"path..wimp.files File path folder containing raw WIMP files","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_wimp_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert raw WIMP CSV files to data table — read_in_wimp_files","text":"data.table mb genes specific coverage","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/read_in_wimp_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert raw WIMP CSV files to data table — read_in_wimp_files","text":"","code":"if (FALSE) { read_in_wimp_files(path.to.wimp.files=\"~/Desktop/my.files\") }"},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_metagenomeseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw WIMP files plus metadata to metagenomeseq object — wimp_raw_to_metagenomeseq","title":"Raw WIMP files plus metadata to metagenomeseq object — wimp_raw_to_metagenomeseq","text":"Given WIMP directory metadata, make phyloseq object. metagenomeSeq package required.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_metagenomeseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw WIMP files plus metadata to metagenomeseq object — wimp_raw_to_metagenomeseq","text":"","code":"wimp_raw_to_metagenomeseq(   path.to.wimp.files,   metadata,   keep.unclassified = FALSE,   keep.human = FALSE )"},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_metagenomeseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raw WIMP files plus metadata to metagenomeseq object — wimp_raw_to_metagenomeseq","text":"path..wimp.files path data raw CSV files WIMP analysis metadata dataframe metadata \"filename\" \"barcode\" columns required keep.unclassified TRUE FALSE: whether keep reads classify phylum, default = FALSE keep.human TRUE FALSE: whether keep reads classified human, default = FALSE","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_metagenomeseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raw WIMP files plus metadata to metagenomeseq object — wimp_raw_to_metagenomeseq","text":"metagenomeseq object downstream analysis WIMP data","code":""},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_metagenomeseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raw WIMP files plus metadata to metagenomeseq object — wimp_raw_to_metagenomeseq","text":"","code":"if (FALSE) { wimp_raw_to_metagenomeseq(path.to.wimp.files = path/to/wimpfiles, metadata = metadata, keep.unclassified = FALSE, keep.human = FALSE) }"},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_phyloseq.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw WIMP files plus metadata to phyloseq object — wimp_raw_to_phyloseq","title":"Raw WIMP files plus metadata to phyloseq object — wimp_raw_to_phyloseq","text":"Given wimp directory metadata, make phyloseq object. phyloseq package required.","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_phyloseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw WIMP files plus metadata to phyloseq object — wimp_raw_to_phyloseq","text":"","code":"wimp_raw_to_phyloseq(   path.to.wimp.files,   metadata,   keep.unclassified = FALSE,   keep.human = FALSE )"},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_phyloseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raw WIMP files plus metadata to phyloseq object — wimp_raw_to_phyloseq","text":"path..wimp.files path data raw csv files WIMP analysis metadata dataframe metadata \"filename\" \"barcode\" columns required keep.unclassified TRUE FALSE: whether keep reads classify phylum, default = FALSE keep.human TRUE FALSE: whether keep reads classified human, default = FALSE","code":""},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_phyloseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raw WIMP files plus metadata to phyloseq object — wimp_raw_to_phyloseq","text":"phyloseq object downstream analysis WIMP data","code":""},{"path":[]},{"path":"https://mweinroth.github.io/epi2me2r/reference/wimp_raw_to_phyloseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raw WIMP files plus metadata to phyloseq object — wimp_raw_to_phyloseq","text":"","code":"if (FALSE) { wimp_raw_to_phyloseq(path.to.wimp.files = path/to/wimpfiles, metadata = metadata, keep.unclassified = FALSE, keep.human = FALSE) }"},{"path":"https://mweinroth.github.io/epi2me2r/news/index.html","id":"epi2me2r-010","dir":"Changelog","previous_headings":"","what":"epi2me2r 0.1.0","title":"epi2me2r 0.1.0","text":"2022-06-01 First release epi2me2r submitted CRAN!","code":""}]
